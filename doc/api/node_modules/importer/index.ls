require! {
	fs
	pathlib: path
}



export read = fs.readFileSync _, 'utf-8'

export class Importer
	(@module) ~>
		@modDir = pathlib.dirname @module.filename

	# --------------------------------------------------------------------------

	resolve: (filename) -> pathlib.join @modDir, filename

	exists: (filename) ->
		fs.existsSync @resolve filename

	readFromModuleDir: (filename) ->
		resolved = @resolve filename
		if @exists filename
			read(@resolve(filename)).trim()
		else ''

	# --------------------------------------------------------------------------

	catch: ->
		if @exists 'catch.md'
			{
				content: @readFromModuleDir 'catch.md'
				format: 'markdown'
			}
		else
			{
				content: @readFromModuleDir 'catch.html'
				format: 'html'
			}

	desc: ->
		if @exists 'desc.md'
			{
				content: @readFromModuleDir 'desc.md'
				format: 'markdown'
			}
		else
			{
				content: @readFromModuleDir 'desc.html'
				format: 'html'
			}

	ex: -> @readFromModuleDir 'ex.hsp'
	sample: -> @readFromModuleDir 'sample.hsp'

	# --------------------------------------------------------------------------

	entries: (submodules) ->
		entries = []
		for submodule in submodules
			entries ++= require @resolve submodule

		entries
