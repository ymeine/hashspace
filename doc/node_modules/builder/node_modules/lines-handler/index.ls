export class LinesHandler
	(input) ~>
		spec = switch typeof! input
		| 'String', 'RegExp' => {splitPattern: input}
		| 'Object' => input
		| _ => {}

		# --------------------------------------------------------- splitPattern

		{splitPattern, splitChar} = spec

		splitPattern ?= splitChar

		splitPattern ?= '\n'

		if typeof! splitPattern is 'String'
			splitChar = splitPattern
			splitPattern = new RegExp splitPattern, 'g'

		@ <<< {splitPattern}

		# ------------------------------------------------------------- joinChar

		{joinChar} = spec

		joinChar ?= splitChar

		@ <<< {joinChar}


	split: (string) -> string.split @splitPattern

	join: (lines) -> lines.join @joinChar

	indent: (level, string, skipFirst) ->
		skipFirst ?= yes

		processed = []
		unprocessed = @split string

		if skipFirst => processed.push unprocessed.shift!

		indent = '\t' * level
		for line in unprocessed => processed.push "#indent#line"
		@join processed
